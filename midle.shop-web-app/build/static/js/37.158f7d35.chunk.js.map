{"version":3,"sources":["containers/ResponsiveContainer/ResponsiveContainer.js"],"names":["ResponsiveContainerMobile","__WEBPACK_IMPORTED_MODULE_3_react_loadable___default","loader","__webpack_require__","e","then","bind","loading","ResponsiveContainerTablet","ResponsiveContainerComputer","ResponsiveContainerLargeScreen","ResponsiveContainerWideScreen","__webpack_exports__","Object","__WEBPACK_IMPORTED_MODULE_2_react_hot_loader__","module","__WEBPACK_IMPORTED_MODULE_1_react_redux__","state","deviceScreenSizeType","device","screen_size_type","props","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement"],"mappings":"0QAcMA,EAA4BC,KAChCC,OAAQ,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAS,kBAAM,QAEXC,EAA4BP,KAChCC,OAAQ,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAS,kBAAM,QAEXE,EAA8BR,KAClCC,OAAQ,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAS,kBAAM,QAEXG,EAAiCT,KACrCC,OAAQ,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAS,kBAAM,QAEXI,EAAgCV,KACpCC,OAAQ,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,YACdC,QAAS,kBAAM,QA6BjBK,EAAA,EAAeC,OAAAC,EAAA,IAAAD,CAAIE,EAAnB,CACEF,OAAAG,EAAA,EAAAH,CAPF,SAA0BI,GACxB,OACEC,qBAAsBD,EAAME,OAAOC,mBAKrCP,CA1B0B,SAACQ,GAAU,IAE7BH,EAA0BG,EAA1BH,qBAER,MAA6B,WAAzBA,EACMI,EAAAC,EAAAC,cAACxB,EAA8BqB,GACL,WAAzBH,EACDI,EAAAC,EAAAC,cAAChB,EAA8Ba,GACL,aAAzBH,EACDI,EAAAC,EAAAC,cAACf,EAAgCY,GACP,gBAAzBH,EACDI,EAAAC,EAAAC,cAACd,EAAmCW,GACV,eAAzBH,EACDI,EAAAC,EAAAC,cAACb,EAAkCU,GAEpC","file":"static/js/37.158f7d35.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport Loadable from 'react-loadable';\n\n\n/*\nstatic onlyMobile = { minWidth: 320, maxWidth: 767 }\nstatic onlyTablet = { minWidth: 768, maxWidth: 991 }\nstatic onlyComputer = { minWidth: 992 } //only screen and (max-width: 1199px) and (min-width: 992px)\nstatic onlyLargeScreen = { minWidth: 1200, maxWidth: 1919 }\nstatic onlyWidescreen = { minWidth: 1920 }\n*/\n\nconst ResponsiveContainerMobile = Loadable({\n  loader: () => import('./ResponsiveContainerMobile'),\n  loading: () => null,\n});\nconst ResponsiveContainerTablet = Loadable({\n  loader: () => import('./ResponsiveContainerTablet'),\n  loading: () => null,\n});\nconst ResponsiveContainerComputer = Loadable({\n  loader: () => import('./ResponsiveContainerComputer'),\n  loading: () => null,\n});\nconst ResponsiveContainerLargeScreen = Loadable({\n  loader: () => import('./ResponsiveContainerLargeScreen'),\n  loading: () => null,\n});\nconst ResponsiveContainerWideScreen = Loadable({\n  loader: () => import('./ResponsiveContainerWideScreen'),\n  loading: () => null,\n});\n\n\nconst ResponsiveContainer = (props) => {\n  //console.log('|--> ResponsiveContainer render')\n  const { deviceScreenSizeType }  = props;\n\n  if (deviceScreenSizeType === 'mobile') {\n    return (<ResponsiveContainerMobile {...props} />);\n  } else if (deviceScreenSizeType === 'tablet') {\n    return (<ResponsiveContainerTablet {...props} />);\n  } else if (deviceScreenSizeType === 'computer') {\n    return (<ResponsiveContainerComputer {...props} />);\n  } else if (deviceScreenSizeType === 'largeScreen') {\n    return (<ResponsiveContainerLargeScreen {...props} />);\n  } else if (deviceScreenSizeType === 'wideScreen') {\n    return (<ResponsiveContainerWideScreen {...props} />);\n  } else {\n    return null;\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    deviceScreenSizeType: state.device.screen_size_type,\n  };\n}\n\nexport default hot(module)(\n  connect(mapStateToProps)(ResponsiveContainer)\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/ResponsiveContainer/ResponsiveContainer.js"],"sourceRoot":""}